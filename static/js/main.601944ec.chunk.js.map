{"version":3,"sources":["Components/AddContactForm/AddContactForm.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","utils/storage.js","App.js","index.js"],"names":["AddContactForm","formSubmit","inputValue","name","number","onSubmit","className","type","onChange","value","ContactList","contacts","filteredNames","deleteItem","length","TransitionGroup","component","map","el","CSSTransition","classNames","timeout","key","id","onClick","Filter","onInput","localStorage","setItem","JSON","stringify","err","Error","items","getItem","parse","App","state","filter","book","inContact","e","target","setState","resetData","preventDefault","contact","uuidv4","isExist","find","alert","deletedArr","toLowerCase","includes","takeFromStorage","getContact","storage","addToStorage","prevState","toggleAlert","this","in","mounthOnEnter","unmountOnExit","enter","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.601944ec.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst AddContactForm = ({ formSubmit, inputValue, name, number }) => {\n  return (\n    <form onSubmit={formSubmit} className=\"block\">\n      <p className=\"label\">Name</p>\n      <input type=\"text\" onChange={inputValue} value={name} name=\"name\"></input>\n      <p className=\"label\">Number input</p>\n      <input\n        type=\"text\"\n        onChange={inputValue}\n        value={number}\n        name=\"number\"\n      />\n      <button type=\"submit\">Add phone</button>\n    </form>\n  );\n  AddContactForm.propTypes = {\n    formSubmit: PropTypes.func.isRequired,\n    inputValue: PropTypes.func.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string,\n  };\n};\n\nexport default AddContactForm;\n","import React from \"react\";\nimport PropTypes from 'prop-types'\nimport {CSSTransition, TransitionGroup } from 'react-transition-group'\n\nconst ContactList = ({ contacts, filteredNames, deleteItem }) => {\n\n  return (\n    <>\n      {contacts.length > 2 ? (\n        <TransitionGroup component=\"ul\" className=\"list\">\n          {filteredNames().map((el) => (\n            <CSSTransition classNames=\"listItem\" timeout={300} key={el.id}>\n            <li  className='listItem'>\n            <div className=\"listName\">{el.name}</div> <div className=\"listName\">{el.number}</div> \n              <button onClick={() => deleteItem(el.id)} className=\"deletBtn\">X</button>\n            </li>\n            </CSSTransition>\n          ))}\n        </TransitionGroup>\n      ) : (\n        <TransitionGroup component=\"ul\" className=\"list\" >\n          {contacts.map((el) => (\n            <CSSTransition classNames=\"listItem\" timeout={300}>\n            <li key={el.id} className='listItem'>\n              <div className=\"listName\">{el.name}</div> <div className=\"listName\">{el.number}</div> \n              <button onClick={() => deleteItem(el.id)} className=\"deletBtn\">X</button>\n            </li>\n            </CSSTransition>\n          ))}\n        </TransitionGroup>\n      )}\n    </>\n  );\n  ContactList.propTypes ={ \n    contacts: PropTypes.arrayOf({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n    filteredNames: PropTypes.func, \n    deleteItem: PropTypes.func,\n  }\n};\n\nexport default ContactList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\"\n\nconst Filter = ({ inputValue,  }) => {\n  return (\n    <div className=\"block\">\n      <p className=\"label\">Find contacts by name</p>\n      <input\n        type=\"text\"\n        onInput={inputValue}\n        name=\"filter\"/>\n    </div>\n  );\n  Filter.propTypes ={\n    inputValue:PropTypes.func.isRequired,\n\n  }\n\n};\n\nexport default Filter;\n","const save = (key, value) => {\n    try {\n      localStorage.setItem(key, JSON.stringify(value));\n    } catch (err) {\n      throw new Error();\n    }\n  };\n\n  const get = key => {\n    try {\n      const items = localStorage.getItem(key);\n      return items ? JSON.parse(items) : null;\n    } catch (err) {\n      throw new Error();\n    }\n  };\n  \n  export default {\n    save,\n    get,\n  }","import React, { Component } from \"react\";\nimport AddContactForm from \"./Components/AddContactForm/AddContactForm\";\nimport ContactList from \"./Components/ContactList/ContactList\";\nimport Filter from \"./Components/Filter/Filter\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport storage from \"./utils/storage\";\nimport { CSSTransition } from \"react-transition-group\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n    name: \"\",\n    number: \"\",\n    book: false,\n    inContact: false,\n  };\n\n  async componentDidUpdate(prevState) {\n    this.addToStorage(prevState);\n  }\n\n  inputValue = (e) => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  resetData = () => {\n    this.setState({\n      name: \"\",\n      number: \"\",\n    });\n  };\n\n  formSubmit = (e) => {\n    e.preventDefault();\n    const contact = {\n      name: this.state.name,\n      number: this.state.number,\n      id: uuidv4(),\n    };\n    const isExist = this.state.contacts.find(\n      (el) => el.name === this.state.name\n    );\n    if (this.state.name === \"\" || this.state.number === \"\") {\n      alert(\"Fill the form\");\n      return;\n    }\n    if (isExist) {\n      // alert(`${this.state.name} is already in contact`);\n      this.setState({\n        name: \"\",\n        number: \"\",\n        inContact: true,\n      });\n      return;\n    } else {\n      this.setState({ contacts: [...this.state.contacts, contact] });\n    }\n    this.resetData();\n  };\n\n  deleteItem = (id) => {\n    const deletedArr = this.state.contacts.filter((el) => el.id !== id);\n    this.setState({ contacts: deletedArr });\n  };\n\n  filteredNames = () => {\n    return this.state.contacts.filter((el) =>\n      el.name.toLowerCase().includes(this.state.filter)\n    );\n  };\n\n  takeFromStorage = () => {\n    const getContact = storage.get(\"contact\");\n    if (getContact) {\n      this.setState({\n        contacts: getContact,\n      });\n    }\n  };\n\n  async componentDidMount() {\n    this.takeFromStorage();\n    this.setState({\n      book: true,\n    });\n  }\n\n  addToStorage = (prevState) => {\n    if (prevState !== this.state.contacts) {\n      storage.save(\"contact\", this.state.contacts);\n    }\n  };\n\n  toggleAlert = () => {\n    this.setState({\n      inContact: false\n    })\n  }\n\n  render() {\n    const { name, contacts, filter, number } = this.state;\n\n    return (\n      <div className=\"overlay\">\n        <CSSTransition\n          in={this.state.inContact}\n          classNames=\"alert\"\n          timeout={250}\n          mounthOnEnter\n          unmountOnExit\n        >\n          <div className=\"alert\" onClick={this.toggleAlert}>Already in contact</div>\n        </CSSTransition>\n        <CSSTransition\n          in={this.state.book}\n          classNames=\"phonebook\"\n          timeout={{ enter: 500 }}\n        >\n          <h1 className=\"phonebook\">Phonebook</h1>\n        </CSSTransition>\n\n        <AddContactForm\n          formSubmit={this.formSubmit}\n          inputValue={this.inputValue}\n          name={name}\n          number={number}\n        />\n        <h2 className=\"phonebook\">Contact List</h2>\n        <Filter inputValue={this.inputValue} filter={filter} />\n        <ContactList\n          contacts={contacts}\n          filteredNames={this.filteredNames}\n          deleteItem={this.deleteItem}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}